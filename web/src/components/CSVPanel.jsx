import React,{useRef,useState} from 'react'
import {api} from '../utils/api'
function parseCSV(t){const lines=t.trim().split(/\r?\n/);const headers=lines[0].split(',').map(h=>h.trim().toLowerCase());const out=[];for(let i=1;i<lines.length;i++){const cols=lines[i].split(',');if(cols.length<2)continue;const o={};headers.forEach((h,idx)=>o[h]=(cols[idx]||'').trim());out.push(o)}return out}
export default function CSVPanel({onImported}){const[busy,setBusy]=useState(false);const inputRef=useRef(null);const doImport=async e=>{const f=e.target.files[0];if(!f)return;const text=await f.text();const rows=parseCSV(text).map(r=>({supplier:r.supplier||'Bidfood',item:r.item,category:r.category||'Other',quantity:Number(r.quantity||0),price:Number(r.price||0),sku:r.sku||''})).filter(r=>r.item);if(!rows.length){alert('No valid rows found.');return}setBusy(true);try{const key=localStorage.getItem('admin_key')||'';const res=await api('/api/bulk/items',{method:'POST',body:JSON.stringify(rows),headers:{'x-key':key}});alert(`Imported ${res.count} items.`);onImported&&onImported()}finally{setBusy(false)}if(inputRef.current)inputRef.current.value=''};const doExport=async()=>{const csv=await api('/api/export',{method:'GET'});const blob=new Blob([csv],{type:'text/csv'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='stock-export.csv';a.click();URL.revokeObjectURL(url)};return(<div className='bg-white p-4 rounded-2xl shadow grid gap-3'><h2 className='text-xl font-semibold'>Import / Export CSV</h2><p className='text-sm text-gray-600'>CSV headers: supplier,item,category,quantity,price,sku</p><input ref={inputRef} type='file' accept='.csv,text/csv' onChange={doImport}/><div><button onClick={doExport} className='px-4 py-2 rounded-xl border'>Download Export</button></div>{busy&&<p>Importingâ€¦</p>}</div>) }